dplyr::mutate(
prd_pt_pudc_pcc = ifelse(CCP1 == "PRD,PT,UDC,PCC ", rowSums(PRD,PT,PUDC,PCC,CCM1,na.rm = TRUE), 0),
PRD = ifelse(CCP1 == "PRD,PT,UDC,PCC ", 0, PRD),
PT = ifelse(CCP1 == "PRD,PT,UDC,PCC ", 0, PT),
PUDC = ifelse(CCP1 == "PRD,PT,UDC,PCC ", 0, PUDC),
PCC = ifelse(CCP1 == "PRD,PT,UDC,PCC ", 0, PCC),
CCM1 = ifelse(CCP1 == "PRD,PT,UDC,PCC ", 0, CCM1))
# Step 13: Handle PRD-UDC coalition
data_2002 <- data_2002 %>%
dplyr::mutate(
prd_pudc = ifelse(CCP1 == "PRD,UDC ", rowSums(PRD,PUDC,CCM1,na.rm = TRUE), 0),
PRD = ifelse(CCP1 == "PRD,UDC ", 0, PRD),
PUDC = ifelse(CCP1 == "PRD,UDC ", 0, PUDC),
CCM1 = ifelse(CCP1 == "PRD,UDC ", 0, CCM1))
data_2002 <- data_2002 %>%
dplyr::mutate(
prd_pudc_pcc_pl = ifelse(CCP1 == "PRD,UDC,PCC,PL", (PRD + PUDC + PCC + PL + CCM1), 0),
PRD = ifelse(CCP1 == "PRD,UDC,PCC,PL", 0, PRD),
PUDC = ifelse(CCP1 == "PRD,UDC,PCC,PL", 0, PUDC),
PCC = ifelse(CCP1 == "PRD,UDC,PCC,PL", 0, PCC),
PL = ifelse(CCP1 == "PRD,UDC,PCC,PL", 0, PL),
CCM1 = ifelse(CCP1 == "PRD,UDC,PCC,PL", 0, CCM1))
# Step 15: Handle PT-PCC coalition
data_2002 <- data_2002 %>%
dplyr::mutate(
pt_pcc = ifelse(CCP1 == "PT,PCC ", rowSums(PT,PCC,CCM1,na.rm = TRUE), 0),
PT = ifelse(CCP1 == "PT,PCC ", 0, PT),
PCC = ifelse(CCP1 == "PT,PCC ", 0, PCC),
CCM1 = ifelse(CCP1 == "PT,PCC ", 0, CCM1))
# Step 16: Handle UDC-PCC-PAS coalition
data_2002 <- data_2002 %>%
dplyr::mutate(
pudc_pcc_pas = ifelse(CCP2 == "UDC,PCC,PAS ", rowSums(PUDC,PCC,PAS,CCM2,na.rm = TRUE), 0),
PUDC = ifelse(CCP2 == "UDC,PCC,PAS ", 0, PUDC),
PCC = ifelse(CCP2 == "UDC,PCC,PAS ", 0, PCC),
PAS = ifelse(CCP2 == "UDC,PCC,PAS ", 0, PAS),
CCM2 = ifelse(CCP2 == "UDC,PCC,PAS ", 0, CCM2))
# Step 17: Drop coalition and ccm variables
data_2002 <- data_2002 %>%
dplyr::select(-c(CCM1, CCM2, CCP1, CCP2))
# Step 18: Rename columns for parties
data_2002 <- data_2002 %>%
dplyr::rename(
PRD_PT = prd_pt,
PRD_PT_PCD = prd_pt_pcd,
PRD_PT_PUDC = prd_pt_pudc,
PRD_PT_PUDC_PCC = prd_pt_pudc_pcc,
PRD_PUDC = prd_pudc,
PRD_PUDC_PCC_PL = prd_pudc_pcc_pl,
PT_PCC = pt_pcc,
PUDC_PCC_PAS = pudc_pcc_pas)
# Step 19: Calculate turnout
data_2002 <- data_2002 %>%
dplyr::mutate(turnout = total / listanominal)
# Step 20: Generate unique IDs by municipality
data_2002 <- data_2002 %>%
mutate(
uniqueid = case_when(
municipality == "Abasolo" ~ 5001,
str_detect(municipality, "Acu") ~ 5002,
municipality == "Allende" ~ 5003,
municipality == "Arteaga" ~ 5004,
municipality == "Candela" ~ 5005,
str_detect(municipality, "Casta") ~ 5006,
str_detect(municipality, "Cuatroci") ~ 5007,
municipality == "Escobedo" ~ 5008,
municipality == "Francisco I. Madero" ~ 5009,
municipality == "Frontera" ~ 5010,
municipality == "General Cepeda" ~ 5011,
municipality == "Guerrero" ~ 5012,
municipality == "Hidalgo" ~ 5013,
str_detect(municipality, "Jim") ~ 5014,
str_detect(municipality, "rez") ~ 5015,
municipality == "Lamadrid" ~ 5016,
municipality == "Matamoros" ~ 5017,
municipality == "Monclova" ~ 5018,
municipality == "Morelos" ~ 5019,
str_detect(municipality, "zquiz") ~ 5020,
municipality == "Nadadores" ~ 5021,
municipality == "Nava" ~ 5022,
municipality == "Ocampo" ~ 5023,
municipality == "Parras" ~ 5024,
municipality == "Piedras Negras" ~ 5025,
municipality == "Progreso" ~ 5026,
municipality == "Ramos Arizpe" ~ 5027,
municipality == "Sabinas" ~ 5028,
municipality == "Sacramento" ~ 5029,
municipality == "Saltillo" ~ 5030,
municipality == "San Buenaventura" ~ 5031,
municipality == "San Juan de Sabinas" ~ 5032,
municipality == "San Pedro" ~ 5033,
municipality == "Sierra Mojada" ~ 5034,
str_detect(municipality, "Torre") ~ 5035,
municipality == "Viesca" ~ 5036,
str_detect(municipality, "Villa Uni") ~ 5037,
municipality == "Zaragoza" ~ 5038
)
)
# Step 21: Calculate valid votes
data_2002 <- data_2002 %>%
dplyr::mutate(valid = sum(across(c(PAN:PSN,PRD_PT,PRD_PT_PCD,
PRD_PT_PUDC_PCC,PRD_PUDC,
PRD_PUDC_PCC_PL,PT_PCC,
PUDC_PCC_PAS)), na.rm = TRUE))
# Step 1: Import 'LISTA NOMINAL COAHUILA 2005' Excel file
lista_nominal_2005 <- read_excel("LISTA NOMINAL COAHUILA 2005.xls", sheet = "estad_lp_05_01")
# Step 2: Rename 'SECCION' to 'section'
lista_nominal_2005 <- lista_nominal_2005 %>%
dplyr::rename(section = SECCION)
# Step 3: Drop rows where 'section' is missing
lista_nominal_2005 <- lista_nominal_2005 %>%
dplyr::filter(!is.na(section))
# Step 4: Rename 'LN' to 'listanominal'
lista_nominal_2005 <- lista_nominal_2005 %>%
dplyr::rename(listanominal = "L.N.")
# Step 5: Collapse data by 'section' and sum 'listanominal'
lista_nominal_2005 <- lista_nominal_2005 %>%
dplyr::group_by(section) %>%
dplyr::summarise(listanominal = sum(listanominal))
# Step 7: Import 'Ayu_Seccion_2005_No_LN.csv' file
seccion_2005 <- read.csv("Ayu_Seccion_2005_No_LN.csv")
names(seccion_2005)
# Step 8: Rename columns
seccion_2005 <- seccion_2005 %>%
dplyr::rename(municipality = MUNICIPIO,
section = SECCION,
total = TOTAL,
nulos = NULOS)
# Step 9: Drop rows where 'total' is missing or zero
seccion_2005 <- seccion_2005 %>%
dplyr::filter(!is.na(total) & total != 0)
# Step 10: Convert relevant columns to numeric
seccion_2005 <- seccion_2005 %>%
dplyr::mutate(across(PAN:total, as.numeric))
# Step 11: Collapse (sum) data by 'municipality' and 'section' for all columns
data_2005 <- seccion_2005 %>%
dplyr::group_by(municipality, section) %>%
dplyr::summarise(across(PAN:total, sum, na.rm = TRUE))
# Step 12: Create 'pan_pudc' for selected municipalities
data_2005 <- data_2005 %>%
dplyr::mutate(
pan_pudc = ifelse(municipality %in% c("Acuña", "Castaños", "Cuatrociénegas", "Escobedo", "Frontera",
"General Cepeda", "Jiménez", "Morelos", "Múzquiz", "Nadadores",
"Parras", "Piedras Negras", "Progreso", "Ramos Arizpe", "Sabinas",
"Sacramento", "Saltillo", "San Juan de Sabinas", "Sierra Mojada",
"Viesca", "Villa Unión", "Zaragoza"), PAN + PUDC + CCM1, 0),
CCM1 = ifelse(municipality %in% c("Acuña", "Castaños", "Cuatrociénegas", "Escobedo", "Frontera",
"General Cepeda", "Jiménez", "Morelos", "Múzquiz", "Nadadores",
"Parras", "Piedras Negras", "Progreso", "Ramos Arizpe", "Sabinas",
"Sacramento", "Saltillo", "San Juan de Sabinas", "Sierra Mojada",
"Viesca", "Villa Unión", "Zaragoza"), 0, CCM1),
PAN = ifelse(municipality %in% c("Acuña", "Castaños", "Cuatrociénegas", "Escobedo", "Frontera",
"General Cepeda", "Jiménez", "Morelos", "Múzquiz", "Nadadores",
"Parras", "Piedras Negras", "Progreso", "Ramos Arizpe", "Sabinas",
"Sacramento", "Saltillo", "San Juan de Sabinas", "Sierra Mojada",
"Viesca", "Villa Unión", "Zaragoza"), 0, PAN),
PUDC = ifelse(municipality %in% c("Acuña", "Castaños", "Cuatrociénegas", "Escobedo", "Frontera",
"General Cepeda", "Jiménez", "Morelos", "Múzquiz", "Nadadores",
"Parras", "Piedras Negras", "Progreso", "Ramos Arizpe", "Sabinas",
"Sacramento", "Saltillo", "San Juan de Sabinas", "Sierra Mojada",
"Viesca", "Villa Unión", "Zaragoza"), 0, PUDC))
# Step 13: Create 'prd_pt' for selected municipalities
data_2005 <- data_2005 %>%
dplyr::mutate(
prd_pt = case_when(
municipality == "Matamoros" ~ PRD + PT + CCM1,
municipality %in% c("Jiménez", "Múzquiz") ~ PRD + PT + CCM2,
TRUE ~ 0),
PRD = ifelse(municipality %in% c("Jiménez", "Matamoros", "Múzquiz"), 0, PRD),
PT = ifelse(municipality %in% c("Jiménez", "Matamoros", "Múzquiz"), 0, PT),
CCM1 = ifelse(municipality == "Matamoros", 0, CCM1),
CCM2 = ifelse(municipality %in% c("Jiménez", "Múzquiz"), 0, CCM2))
# Step 14: Drop columns 'ccm1' and 'ccm2'
data_2005 <- data_2005 %>%
select(-CCM1, -CCM2)
# Step 15: Rename columns
data_2005 <- data_2005 %>%
dplyr::rename(
PAN_PUDC = pan_pudc,
PRD_PT = prd_pt
)
# Step 16: Load and merge 'ListaNominal2005.rds' by 'section'
lista_nominal_2005 <- read.dta13("ListaNominal2005.dta")
data_2005 <- left_join(data_2005, lista_nominal_2005,
by = "section")
# Step 17: Drop rows where '_merge' is 2 (those without matches in the merge)
data_2005 <- data_2005 %>%
dplyr::filter(!is.na(listanominal))
# Step 18: Calculate turnout
data_2005 <- data_2005 %>%
dplyr::mutate(turnout = total / listanominal)
# Step 19: Assign unique IDs based on municipalities
data_2005 <- data_2005 %>%
dplyr::mutate(
uniqueid = case_when(
municipality == "Abasolo" ~ 5001,
str_detect(municipality, "Acu") ~ 5002,
municipality == "Allende" ~ 5003,
municipality == "Arteaga" ~ 5004,
municipality == "Candela" ~ 5005,
str_detect(municipality, "Casta") ~ 5006,
str_detect(municipality, "Cuatroci") ~ 5007,
municipality == "Escobedo" ~ 5008,
municipality == "Francisco I. Madero" ~ 5009,
municipality == "Frontera" ~ 5010,
municipality == "General Cepeda" ~ 5011,
municipality == "Guerrero" ~ 5012,
municipality == "Hidalgo" ~ 5013,
str_detect(municipality, "Jim") ~ 5014,
str_detect(municipality, "rez") ~ 5015,
municipality == "Lamadrid" ~ 5016,
municipality == "Matamoros" ~ 5017,
municipality == "Monclova" ~ 5018,
municipality == "Morelos" ~ 5019,
str_detect(municipality, "zquiz") ~ 5020,
municipality == "Nadadores" ~ 5021,
municipality == "Nava" ~ 5022,
municipality == "Ocampo" ~ 5023,
municipality == "Parras" ~ 5024,
municipality == "Piedras Negras" ~ 5025,
municipality == "Progreso" ~ 5026,
municipality == "Ramos Arizpe" ~ 5027,
municipality == "Sabinas" ~ 5028,
municipality == "Sacramento" ~ 5029,
municipality == "Saltillo" ~ 5030,
municipality == "San Buenaventura" ~ 5031,
municipality == "San Juan de Sabinas" ~ 5032,
municipality == "San Pedro" ~ 5033,
municipality == "Sierra Mojada" ~ 5034,
str_detect(municipality, "Torre") ~ 5035,
municipality == "Viesca" ~ 5036,
str_detect(municipality, "Villa Uni") ~ 5037,
municipality == "Zaragoza" ~ 5038
)
)
# Step 20: Calculate valid votes
data_2005 <- data_2005 %>%
dplyr::mutate(valid = sum(c_across(PAN:PRD_PT), na.rm = TRUE))
# Step 25: Add year and month
data_2005 <- data_2005 %>%
dplyr::mutate(
year = 2005,
month = "September"
)
# Step 28: Load "all_months_years.dta" file
# Step 16: Load and merge 'ListaNominal2005.rds' by 'section'
lista <- read.dta13("ListaNominal2005.dta")
# Step 32: Load 'Abasolo extraord 2006' Excel file
abasolo_2006 <- read_excel("Abasolo extraord 2006.xlsx", sheet = "Hoja1", range = "A7:K10")
# Step 33: Rename columns and drop missing 'section' rows
abasolo_2006 <- abasolo_2006 %>%
dplyr::rename(section = SECC) %>%
dplyr::filter(section != "")
# Step 34: Convert all columns to numeric where necessary
abasolo_2006 <- abasolo_2006 %>%
dplyr::mutate(across(everything(), as.numeric))
abasolo_2006 <- left_join(abasolo_2006, lista,
by = "section")
# Step 35: Add municipality and calculate 'PRI_PANAL'
abasolo_2006 <- abasolo_2006 %>%
dplyr::mutate(
municipality = "ABASOLO EXTRAORDINARIO",
PRI_PANAL = PRI + PNA + `CC PRI-PNA`) %>%
dplyr::select(-PRI, -PNA, -`CC PRI-PNA`)
# Step 36: Collapse by 'municipality' and 'section'
abasolo_2006 <- abasolo_2006 %>%
dplyr::group_by(municipality, section) %>%
dplyr::summarise(across(c(PAN:listanominal,PRI_PANAL), sum))
# Step 37: Assign 'uniqueid' and merge with 'lista_2006'
abasolo_2006 <- abasolo_2006 %>%
dplyr::mutate(uniqueid = 5001)
# Step 38: Drop rows without a match from the merge
abasolo_2006 <- abasolo_2006 %>%
dplyr::filter(!is.na(listanominal))
names(abasolo_2006)
# Step 39: Calculate turnout
abasolo_2006 <- abasolo_2006 %>%
dplyr::rename(nulos=NULOS,
total=TOTAL) %>%
dplyr::mutate(turnout = total / listanominal)
# Step 40: Calculate valid votes
abasolo_2006 <- abasolo_2006 %>%
dplyr::mutate(valid = sum(PAN, PRD, PASDC, PRI_PANAL, na.rm = TRUE)) %>%
dplyr::select(-VALIDOS)
# Step 44: Add year and month information
abasolo_2006 <- abasolo_2006 %>%
dplyr::mutate(
year = 2006,
month = "September")
data_2005 <- rbind(data_2005,
abasolo_2006)
# Step 1: Import 'Ayu_Seccion_2009.csv'
seccion_2009 <- read_delim("Ayu_Seccion_2009.csv", delim = ",")
names(seccion_2009)
# Step 2: Rename columns
seccion_2009 <- seccion_2009 %>%
dplyr::rename(municipality = MUNICIPIO,
section = SECC,
listanominal = LISTANOMINAL,
nulos = NULOS,
total = TOTAL,
valid = VALIDOS)
# Step 3: Drop rows where 'total' is missing or zero
seccion_2009 <- seccion_2009 %>%
dplyr::filter(!is.na(total) & total != 0)
# Step 4: Convert relevant columns to numeric
seccion_2009 <- seccion_2009 %>%
dplyr::mutate(across(listanominal:total, as.numeric))
# Step 5: Collapse (sum) data by 'municipality' and 'section'
data_2009 <- seccion_2009 %>%
dplyr::group_by(municipality, section) %>%
dplyr::summarise(across(listanominal:total, sum, na.rm = TRUE))
# Step 6: Create 'pri_pvem' for selected municipalities
data_2009 <- data_2009 %>%
dplyr::mutate(
pri_pvem = case_when(
municipality %in% c("Arteaga", "Juárez", "Matamoros", "San Pedro") ~ PRI + PVEM + CC1,
municipality %in% c("La Madrid", "Ramos Arizpe") ~ PRI + PVEM + CC2,
TRUE ~ 0),
PRI = ifelse(municipality %in% c("Arteaga", "Juárez", "Matamoros", "La Madrid", "San Pedro", "Ramos Arizpe"), 0, PRI),
PVEM = ifelse(municipality %in% c("Arteaga", "Juárez", "Matamoros", "La Madrid", "San Pedro", "Ramos Arizpe"), 0, PVEM),
CC1 = ifelse(municipality %in% c("Arteaga", "Juárez", "Matamoros", "San Pedro"), 0, CC1),
CC2 = ifelse(municipality %in% c("La Madrid", "Ramos Arizpe"), 0, CC2))
# Step 7: Create 'pri_pvem_pna' for selected municipalities
data_2009 <- data_2009 %>%
dplyr::mutate(
pri_pvem_pna = ifelse(municipality == "Abasolo", PRI + PVEM + PNA + CC1, 0),
PRI = ifelse(municipality == "Abasolo", 0, PRI),
PVEM = ifelse(municipality == "Abasolo", 0, PVEM),
PNA = ifelse(municipality == "Abasolo", 0, PNA),
CC1 = ifelse(municipality == "Abasolo", 0, CC1))
# Step 8: Create 'pri_pvem_psd' for selected municipalities
data_2009 <- data_2009 %>%
dplyr::mutate(
pri_pvem_psd = case_when(
municipality %in% c("Nadadores", "Ocampo", "San Buenaventura") ~ PRI + PVEM + PSD + CC1,
municipality %in% c("Sacramento", "Viesca") ~ PRI + PVEM + PSD + CC2,
TRUE ~ 0),
PRI = ifelse(municipality %in% c("Nadadores", "Ocampo", "San Buenaventura", "Sacramento", "Viesca"), 0, PRI),
PVEM = ifelse(municipality %in% c("Nadadores", "Ocampo", "San Buenaventura", "Sacramento", "Viesca"), 0, PVEM),
PSD = ifelse(municipality %in% c("Nadadores", "Ocampo", "San Buenaventura", "Sacramento", "Viesca"), 0, PSD),
CC1 = ifelse(municipality %in% c("Nadadores", "Ocampo", "San Buenaventura"), 0, CC1),
CC2 = ifelse(municipality %in% c("Sacramento", "Viesca"), 0, CC2))
# Step 9: Create 'pri_pvem_pna_psd' for selected municipalities
data_2009 <- data_2009 %>%
dplyr::mutate(
pri_pvem_pna_psd = case_when(
municipality %in% c("Allende", "Candela", "Cuatrociénegas", "Escobedo", "Guerrero", "Hidalgo",
"Morelos", "Múzquiz", "Sierra Mojada", "Villa Unión", "Zaragoza") ~ PRI + PVEM + PNA + PSD + CC1,
municipality %in% c("Castaños", "Sabinas", "Progreso") ~ PRI + PVEM + PNA + PSD + CC2,TRUE ~ 0),
PRI = ifelse(municipality %in% c("Allende", "Candela", "Castaños", "Cuatrociénegas", "Escobedo", "Guerrero",
"Hidalgo", "Morelos", "Múzquiz", "Sierra Mojada", "Villa Unión", "Zaragoza", "Sabinas", "Progreso"), 0, PRI),
PVEM = ifelse(municipality %in% c("Allende", "Candela", "Castaños", "Cuatrociénegas", "Escobedo", "Guerrero",
"Hidalgo", "Morelos", "Múzquiz", "Sierra Mojada", "Villa Unión", "Zaragoza", "Sabinas", "Progreso"), 0, PVEM),
PNA = ifelse(municipality %in% c("Allende", "Candela", "Castaños", "Cuatrociénegas", "Escobedo", "Guerrero",
"Hidalgo", "Morelos", "Múzquiz", "Sierra Mojada", "Villa Unión", "Zaragoza", "Sabinas", "Progreso"), 0, PNA),
PSD = ifelse(municipality %in% c("Allende", "Candela", "Castaños", "Cuatrociénegas", "Escobedo", "Guerrero",
"Hidalgo", "Morelos", "Múzquiz", "Sierra Mojada", "Villa Unión", "Zaragoza", "Sabinas", "Progreso"), 0, PSD),
CC1 = ifelse(municipality %in% c("Allende", "Candela", "Cuatrociénegas", "Escobedo", "Guerrero", "Hidalgo",
"Morelos", "Múzquiz", "Sierra Mojada", "Villa Unión", "Zaragoza"), 0, CC1),
CC2 = ifelse(municipality %in% c("Castaños", "Sabinas", "Progreso"), 0, CC2))
# Repeat similar steps for other coalition combinations...
names(data_2009)
# Drop any unused columns such as 'cc1', 'cc2', 'cc3', 'cc4'
data_2009 <- data_2009 %>%
select(-CC1, -CC2, -CC3, -CC4)
# Step 10: Calculate 'turnout' as total votes divided by 'listanominal'
data_2009 <- data_2009 %>%
dplyr::mutate(turnout = total / listanominal)
# Step 11: Assign unique IDs based on municipalities
data_2009 <- data_2009 %>%
dplyr::mutate(
uniqueid = case_when(
municipality == "Abasolo" ~ 5001,
str_detect(municipality, "Acu") ~ 5002,
municipality == "Allende" ~ 5003,
municipality == "Arteaga" ~ 5004,
municipality == "Candela" ~ 5005,
str_detect(municipality, "Casta") ~ 5006,
str_detect(municipality, "Cuatroci") ~ 5007,
municipality == "Escobedo" ~ 5008,
municipality == "Francisco I. Madero" ~ 5009,
municipality == "Frontera" ~ 5010,
municipality == "General Cepeda" ~ 5011,
municipality == "Guerrero" ~ 5012,
municipality == "Hidalgo" ~ 5013,
str_detect(municipality, "Jim") ~ 5014,
str_detect(municipality, "rez") ~ 5015,
municipality == "La Madrid" ~ 5016,
municipality == "Matamoros" ~ 5017,
municipality == "Monclova" ~ 5018,
municipality == "Morelos" ~ 5019,
str_detect(municipality, "zquiz") ~ 5020,
municipality == "Nadadores" ~ 5021,
municipality == "Nava" ~ 5022,
municipality == "Ocampo" ~ 5023,
municipality == "Parras" ~ 5024,
municipality == "Piedras Negras" ~ 5025,
municipality == "Progreso" ~ 5026,
municipality == "Ramos Arizpe" ~ 5027,
municipality == "Sabinas" ~ 5028,
municipality == "Sacramento" ~ 5029,
municipality == "Saltillo" ~ 5030,
municipality == "San Buenaventura" ~ 5031,
municipality == "San Juan de Sabinas" ~ 5032,
municipality == "San Pedro" ~ 5033,
municipality == "Sierra Mojada" ~ 5034,
str_detect(municipality, "Torre") ~ 5035,
municipality == "Viesca" ~ 5036,
str_detect(municipality, "Villa Uni") ~ 5037,
municipality == "Zaragoza" ~ 5038
)
)
# Step 17: Add year and month
data_2009 <- data_2009 %>%
dplyr::mutate(
year = 2009,
month = "October")
# Load the Excel file
ayuntamientos_2010 <- read_excel("Ayuntamientos Juarez-Lamadrid 2010.xls", sheet = "Hoja1", range = "A7:N22")
# Filter out rows based on row number (_n)
ayuntamientos_2010 <- ayuntamientos_2010 %>%
dplyr::filter(!(row_number() >= 6 & row_number() <= 12))
# Rename columns
ayuntamientos_2010 <- ayuntamientos_2010 %>%
dplyr::rename(
municipality = MUNICIPIO,
total = TOTAL,
listanominal = "L.N.",
nulos = NULOS,
valid = VALIDOS)
# Create 'section' from 'CASILLA'
ayuntamientos_2010 <- ayuntamientos_2010 %>%
dplyr::mutate(section = substr(CASILLA, 2, 3))
# Convert character columns to numeric (destring equivalent)
ayuntamientos_2010 <- ayuntamientos_2010 %>%
dplyr::mutate(across(c(CASILLA:section), as.numeric))
# Drop rows where 'total' is missing or zero
ayuntamientos_2010 <- ayuntamientos_2010 %>%
dplyr::filter(!is.na(total) & total != 0)
# Create 'PRI_PVEM' for JUÁREZ EXTRAORDINARIO
ayuntamientos_2010 <- ayuntamientos_2010 %>%
dplyr::mutate(PRI_PVEM = ifelse(municipality == "JUÁREZ EXTRAORDINARIO", PRI + PVEM + CCM1, NA))
# Replace 'PRI_PVEM' for LAMADRID EXTRAORDINARIO
ayuntamientos_2010 <- ayuntamientos_2010 %>%
dplyr::mutate(PRI_PVEM = ifelse(municipality == "LAMADRID EXTRAORDINARIO", PRI + PVEM + CCM2, PRI_PVEM))
# Set CCM2 to NA for JUÁREZ EXTRAORDINARIO
ayuntamientos_2010 <- ayuntamientos_2010 %>%
dplyr::mutate(CCM2 = ifelse(municipality == "JUÁREZ EXTRAORDINARIO", NA, CCM2))
# Drop PRI and PVEM columns
ayuntamientos_2010 <- ayuntamientos_2010 %>%
dplyr::select(-PRI, -PVEM)
# Create 'PAN_PUDC' for LAMADRID EXTRAORDINARIO
ayuntamientos_2010 <- ayuntamientos_2010 %>%
dplyr::mutate(PAN_PUDC = ifelse(municipality == "LAMADRID EXTRAORDINARIO", PAN + PUDC + CCM1, NA))
# Drop PAN and PUDC columns
ayuntamientos_2010 <- ayuntamientos_2010 %>%
dplyr::select(-PAN, -PUDC)
names(ayuntamientos_2010)
View(ayuntamientos_2010)
# Read the specific range and sheet from the Excel file
data_2010 <- read_excel("Ayuntamientos Juarez-Lamadrid 2010.xls",
sheet = "Hoja1", range = "A7:N22")
# Use the first row as headers
names(data_2010) <- as.character(data_2010[1, ])
data_2010 <- data_2010[-1, ] # Remove the header row from data
# Step 2: Drop rows with index 6 to 12
data_2010 <- data_2010 %>% slice(-6:-12)
View(data_2010)
# Read the specific range and sheet from the Excel file
data_2010 <- read_excel("Ayuntamientos Juarez-Lamadrid 2010.xls",
sheet = "Hoja1", range = "A7:N22")
View(data_2010)
# Step 2: Drop rows with index 6 to 12
data_2010 <- data_2010 %>% slice(-6:-12)
View(data_2010)
# Step 3: Rename columns
data <- data %>%
dplyr::rename(municipality = MUNICIPIO,
total = TOTAL,
listanominal = LN)
# Step 3: Rename columns
data <- data %>%
dplyr::rename(municipality = MUNICIPIO,
total = TOTAL,
listanominal = LN)
# Step 3: Rename columns
data <- data %>%
dplyr::rename(municipality = MUNICIPIO,
total = TOTAL,
listanominal = LN)
# Step 3: Rename columns
data <- data %>%
rename(municipality = MUNICIPIO,
total = TOTAL,
listanominal = LN)
# Step 3: Rename columns
data <- data %>%
dplyr::rename("municipality" = "MUNICIPIO",
"total" = "TOTAL",
"listanominal" = "LN")
# Step 3: Rename columns
data_2010 <- data_2010 %>%
dplyr::rename("municipality" = "MUNICIPIO",
"total" = "TOTAL",
"listanominal" = "LN")
names(data_2010)
# Step 3: Rename columns
data_2010 <- data_2010 %>%
dplyr::rename("municipality" = "MUNICIPIO",
"total" = "TOTAL",
"listanominal" = "L.N.")
